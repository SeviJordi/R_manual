# Programming in R

<div style="text-align: justify">

R is a powerful programming language that allows you to write scripts and functions to automate tasks, perform complex analyses, and create custom visualizations. In this section, we will cover some basic programming concepts in R, such as control structures, and packages.

## Control Structures

Control structures allow you to control the flow of execution in your R scripts. The main control structures in R are:

-   `if` statements: Execute a block of code if a condition is true.
-   `for` loops: Iterate over a sequence of values.
-   `while` loops: Execute a block of code while a condition is true.

```{r}
# Example of an if statement
x <- 10
if (x > 5) {
  print("x is greater than 5")
}

# Example of a for loop
for (i in 1:5) {
  print(i)
}

# Example of a while loop
i <- 1
while (i <= 5) {
  print(i)
  i <- i + 1
}
```

::: callout-important
## Exercise

1.  Write a script that prints the numbers from 1 to 10, but only if the number is odd.

Hint: You can use the modulo operator `%%` to check if a number is odd.
:::

::: {.callout-note collapse="true"}
## Solution

```{r}
for (i in 1:10) {
  if (i %% 2 == 1) {
    print(i)
  }
}
```
:::

## Packages

R packages are collections of functions, data, and documentation that extend the capabilities of R. There are thousands of packages available on the Comprehensive R Archive Network (CRAN) and other repositories. To use a package in R, you need to install it using the `install.packages` function and then load it using the `library` function.

```{r eval=FALSE}
# Install the ggplot2 package
install.packages("ggplot2")

# Load the ggplot2 package
library(ggplot2)
```

Once you have loaded a package, you can use its functions and data sets in your R scripts. For example, the `ggplot2` package provides functions for creating high-quality visualizations in R.

::: callout-important
## Exercise

1.  Install and load the `dplyr` package in R.
:::

::: {.callout-note collapse="true"}
## Solution

```{r eval=FALSE}
# Install the dplyr package
install.packages("dplyr")

# Load the dplyr package
library(dplyr)

```
:::

