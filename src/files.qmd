# Files You Can Create in RStudio

```{css}
#| echo: false
p {
  text-align: justify
}
```

RStudio is more than just a tool for writing R scripts; it supports the creation of various file types that serve different purposes in data analysis, reporting, and application development. This section provides an overview of the common file types you can create within RStudio and their typical uses.

---

## R Script (.R)

**What is it?**
An R script is a plain text file where you write and save R code.

**Uses:**
- Writing and executing R code.
- Saving code for reproducibility.
- Automating tasks such as data cleaning, analysis, or visualization.

**How to create:**
1. Go to the RStudio menu.
2. Select **File > New File > R Script**.
3. Write your R code and save it with a `.R` extension.

**Example:**
```{r eval=FALSE}
#| filename: script.R
#| code-fold: true
#| code-summary: script.R
# !/usr/bin/env Rscript # <1>

# This is a simple R script
x <- 1:10
y <- x^2

# Plot the data using color blue # <2>
plot(x, y, type = "l", col = "blue", lwd = 2)

# End of the script
```

1. The shebang line (`#!/usr/bin/env Rscript`) is used to specify the R interpreter for running the script. It is a good practice for executable scripts of any lenguage.
2. Comments are used to provide explanations and context for the code.
---

## R Markdown (.Rmd)

**What is it?**
An R Markdown file is a powerful tool for combining text, code, and output in a single document. It allows you to create dynamic, reproducible reports that can be exported to formats like HTML, PDF, and Word. You can execute code chunks and view the output inline, making it ideal for exploratory data analysis.

**Uses:**
- Generating dynamic reports.
- Creating presentations.
- Writing technical documentation.
- Iterative data exploration.
- Creating interactive documents with immediate feedback.

**How to create:**
1. Go to **File > New File > R Markdown**.
2. Fill in the required fields (e.g., Title, Author, Default Output Format).
3. Write your content in Markdown syntax and embed R code chunks using backticks.

**Output formats:**
- HTML
- PDF (requires LaTeX)
- Microsoft Word

**Example:**
```{r eval=FALSE}
#| filename: report.Rmd
#| code-fold: true
#| code-summary: report.Rmd

# Header 1
This is an R Markdown document. 
You can embed R code chunks like the one below (remove comments):

# ```{r}
# summary(cars)
# plot(cars)
# ```

```

---

## Quarto Document (.qmd)

**What is it?**
A Quarto file (`.qmd`) is a powerful document format that supports dynamic, reproducible content. Itâ€™s an evolution of R Markdown, allowing you to integrate R and other programming languages (like Python) seamlessly.

**Uses:**
- Authoring scientific papers, reports, and blogs.
- Creating dashboards and interactive documents.
- Writing technical documentation.

**How to create:**
1. Go to **File > New File > Quarto Document**.
2. Select the desired format (e.g., HTML, PDF, Word).
3. Write content using Markdown syntax and embed code chunks with R or other languages.

**Output formats:**
- HTML
- PDF (requires LaTeX)
- Microsoft Word
- Interactive dashboards (e.g., Flexdashboard)

**Additional features:**
- Enhanced cross-language support (e.g., Python, Julia).
- Better support for extensions and themes compared to R Markdown.
- Supports publishing to Quarto sites or external platforms like GitHub Pages (Like this website).

::: {.callout-tip}
Check out the [Quarto documentation](https://quarto.org) for more information on creating Quarto documents.
:::

**Example:**
```{r eval=FALSE}
#| filename: quarto.qmd
#| code-fold: true
#| code-summary: quarto.qmd

---
title: "Quarto Document"
date: "`r Sys.Date()`"
author: "Your Name"
format:
  html:
    toc: true
    number_sections: true
---

# Introduction
This is a Quarto document. You can embed code chunks like the 
one below (remove comments):

# ```{r}
# summary(cars)
# plot(cars)
# ```

Also python code:
# ```{python}
# import pandas as pd
# df = pd.read_csv("data.csv")
# print(df.head())
# ```

```

---

## R Workspace File (.RData)

**What is it?**
The R Workspace file stores the entire workspace, including all objects and variables. It is automatically saved as `.RData` when you exit RStudio, but you can also save it manually.

**Uses:**
- Preserving the current state of your environment for future sessions.

**How to save and load:**
- Save workspace: `save.image("workspace.RData")`
- Load workspace: `load("workspace.RData")`

---

## Summary Table of File Types

| **File Type**         | **Extension** | **Purpose**                              |
|------------------------|---------------|------------------------------------------|
| R Script              | `.R`          | Write and save R code.                   |
| R Markdown            | `.Rmd`        | Create dynamic, reproducible reports.    |
| Quarto Document       | `.qmd`        | Dynamic, multi-language reproducible reports. |
| R Data File           | `.RData`      | Save and load R objects.                 |


---

RStudio supports diverse file types, enabling you to write code, create reports, explore data, and even build applications. Understanding these file types will help you make the most of RStudio for your projects.

::: {.callout-tip}
Create a Quarto document in RStudio and use it to take notes and solve exercises in this book.
:::

